[
  {
    "name": "set_default_journey_parameters",
    "description": "Set the default journey parameters, which are used in all subsequent journey planning and computation.",
    "input_schema": {
      "type": "objects",
      "properties": {
        "national_search": {
          "type": "boolean",
          "description": "Whether to perform a national (rather than local) search"
        },
        "date": {
          "type": "string",
          "description": "The date for the journey in the format YYYYMMDD"
        },
        "time": {
          "type": "string",
          "description": "The time for the journey in the format HHMM"
        },
        "time_is": {
          "type": "string",
          "enum": ["departing", "arriving"],
          "description": "Specification on what the time of day denotes"
        },
        "journey_preference": {
          "type": "string",
          "enum": ["leastinterchange", "leastwalking", "leasttime"],
          "description": "Preferences on what to optimize in journey planning"
        },
        "mode": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["public-bus", "tube", "train", "overground", "river", "tram", "walking", "cycle", "coach"]
          },
          "description": "The modes of transportation to consider"
        },
        "accessibility_preference": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["noSolidStairs", "noEscalators", "noElevators", "stepFreeToVehicle", "stepFreeToPlatform"]
          },
          "description": "Preferences for accessibility"
        },
        "max_transfer_minutes": {
          "type": "integer",
          "description": "The maximum number of minutes allowed for transfers"
        },
        "max_walking_minutes": {
          "type": "integer",
          "description": "The maximum number of minutes allowed for walking"
        },
        "walking_speed": {
          "type": "string",
          "enum": ["slow", "average", "fast"],
          "description": "The expected speed of walking"
        },
        "cycle_preference": {
          "type": "string",
          "enum": ["allTheWay", "leaveAtStation", "takeOnTransport", "cycleHire"],
          "description": "Preferences on cycling"
        },
        "adjustment": {
          "type": "string",
          "enum": ["TripFirst", "TripLast"],
          "description": "Adjustments to the journey"
        },
        "bike_proficiency": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["easy", "moderate", "fast"]
          },
          "description": "Proficiency in cycling"
        },
        "alternative_cycle": {
          "type": "boolean",
          "description": "Whether to include alternative cycling options"
        },
        "alternative_walking": {
          "type": "boolean",
          "description": "Whether to include alternative walking options"
        },
        "walking_optimization": {
          "type": "boolean",
          "description": "Whether to optimize for walking"
        },
        "taxi_only_trip": {
          "type": "boolean",
          "description": "Whether to consider only taxi as a mode of transportation"
        }
      }
    }
  },
  {
    "name": "compute_journey_plans",
    "description": "Compute the journey plans based on a starting point, a destination, and optional parameters. Note that this does not return the journey or plan details. These have to be retrieved using other tools.",
    "input_schema": {
      "type": "object",
      "properties": {
        "starting_point": {
          "type": "string",
          "description": "The starting point of the journey. This can be free text of a location, a coordinate in the format 'latitude,longitude', or a stop ID."
        },
        "destination": {
          "type": "string",
          "description": "The destination of the journey. This can be free text of a location, a coordinate in the format 'latitude,longitude', or a stop ID."
        },
        "national_search": {
          "type": "boolean",
          "description": "Whether to perform a national (rather than local) search"
        },
        "date": {
          "type": "string",
          "description": "The date for the journey in the format YYYYMMDD"
        },
        "time": {
          "type": "string",
          "description": "The time for the journey in the format HHMM"
        },
        "time_is": {
          "type": "string",
          "enum": ["departing", "arriving"],
          "description": "Specification on what the time of day denotes"
        },
        "journey_preference": {
          "type": "string",
          "enum": ["leastinterchange", "leastwalking", "leasttime"],
          "description": "Preferences on what to optimize in journey planning"
        },
        "mode": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["public-bus", "tube", "train", "overground", "river", "tram", "walking", "cycle", "coach"]
          },
          "description": "The modes of transportation to consider"
        },
        "accessibility_preference": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["noSolidStairs", "noEscalators", "noElevators", "stepFreeToVehicle", "stepFreeToPlatform"]
          },
          "description": "Preferences for accessibility"
        },
        "max_transfer_minutes": {
          "type": "integer",
          "description": "The maximum number of minutes allowed for transfers"
        },
        "max_walking_minutes": {
          "type": "integer",
          "description": "The maximum number of minutes allowed for walking"
        },
        "walking_speed": {
          "type": "string",
          "enum": ["slow", "average", "fast"],
          "description": "The expected speed of walking"
        },
        "cycle_preference": {
          "type": "string",
          "enum": ["allTheWay", "leaveAtStation", "takeOnTransport", "cycleHire"],
          "description": "Preferences on cycling"
        },
        "adjustment": {
          "type": "string",
          "enum": ["TripFirst", "TripLast"],
          "description": "Adjustments to the journey"
        },
        "bike_proficiency": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["easy", "moderate", "fast"]
          },
          "description": "Proficiency in cycling"
        },
        "alternative_cycle": {
          "type": "boolean",
          "description": "Whether to include alternative cycling options"
        },
        "alternative_walking": {
          "type": "boolean",
          "description": "Whether to include alternative walking options"
        },
        "walking_optimization": {
          "type": "boolean",
          "description": "Whether to optimize for walking"
        },
        "taxi_only_trip": {
          "type": "boolean",
          "description": "Whether to consider only taxi as a mode of transportation"
        }
      },
      "required": ["starting_point", "destination"]
    }
  },
  {
    "name": "get_computed_journey",
    "description": "Get the computed journey based on a journey plan index. Note that this tool can only be used after a journey plan has been computed.",
    "input_schema": {
      "type": "object",
      "properties": {
        "journey_index": {
          "type": "integer",
          "description": "The index of the journey which plans to retrieve"
        }
      },
      "required": ["journey_index"]
    }
  },
  {
    "name": "get_computed_journey_plan",
    "description": "Get the specific plan for a specific computed journey based on a journey plan index and a plan index. Note that this tool can only be used after a journey plan has been computed.",
    "input_schema": {
      "type": "object",
      "properties": {
        "journey_index": {
          "type": "integer",
          "description": "The index of the journey which plans to retrieve"
        },
        "plan_index": {
          "type": "integer",
          "description": "The index of the plan to retrieve"
        }
      },
      "required": ["journey_index", "plan_index"]
    }
  },
  {
    "name": "get_plan_field_description",
    "description": "Get the descriptions of all fields in a computed journey plan. This provides a richer semantics to the various fields in the plan.",
    "input_schema": {
      "type": "object",
      "properties": {},
      "required": []
    }
  }
]